@use "../../styles/variables" as *;
fieldset:has(> .label input[type="radio"]) {
    position: relative;
    flex-flow: row wrap;
    display: flex;
    gap: 1em;
}
p.invalidText {
    position: absolute;
    width: 100%;
    flex: 0 0 100%;
    text-align: right;
    top: -2em;
    font-size: 14px;
    font-weight: bold;
    color: $red;
}
.labelContainer {
    flex-flow: row wrap;
    display: flex;
}
.label {
    flex-grow: 1;
    display: flex;
    width: 10%;
    flex-direction: column;
    background-color: $white;
    border-radius: 0.5em;
    border: 2px solid $light-gray;
    padding: 20px 15px 15px 15px;
    min-height: 160px;
    justify-content: space-between;
    &:has(input:checked) {
        background-color: $magnolia;
    }
    &:hover,
    &:has(input:focus),
    &:has(input:focus) {
        border-color: $blue-medium;
    }
}
*:has(> label > .radio:focus-visible) {
    @include focusPseudo;
}
.radio {
    appearance: none;
    position: absolute;
    height: 0px;
}
.icon {
}
.textContainer {
    display: block;
    margin-top: 36px;
    flex-direction: column;
    & span {
        display: block;
    }
}
.text,
.text {
    font-weight: 800;
    line-height: 1.5;
}
.descr {
    color: $gray;
    font-size: $font-size-sm;
}
.price {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 15px;
    color: $blue-medium;
}
.optionalText {
    font-size: $font-size-xs;
}
@media screen and (400px > width) {
    .textContainer {
        margin-top: 0;
    }
    .label {
        width: 100%;
    }
    .label {
        flex-direction: row;
        justify-content: flex-start;
        min-height: auto;
        padding: 1rem 1rem;
        gap: 1rem;
    }
    fieldset:has(> .label input[type="radio"]) {
        flex-direction: column;
        gap: 0.75em;
    }
}
